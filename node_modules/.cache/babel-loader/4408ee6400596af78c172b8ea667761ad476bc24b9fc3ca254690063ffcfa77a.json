{"ast":null,"code":"var _jsxFileName = \"/Users/viswanath.gavva/ui_ws/react-tictactoe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  // const [value,setValue] = useState(\"0\");\n  // function handleClick(){\n  //   setValue('X');\n  //   console.log(value);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 11\n  }, this);\n}\n_c = Square;\nfunction Board({\n  activeUser,\n  squares,\n  onPlay\n}) {\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = 'The Winner is :' + winner;\n  } else {\n    status = \"Next player: \" + activeUser;\n  }\n  function handleSquareClick(i) {\n    //If the square has value. i.e it has been clicked once already. Do not change it.\n    // return from here so the square is unclickable.\n    if (squares[i]) {\n      return;\n    }\n\n    //Calculate winner if any. If there is a winner, do not let a user click on any squares.\n    if (calculateWinner(squares)) {\n      return;\n    }\n\n    //make a copy of original state\n    const nextSquares = squares.slice();\n    onPlay(nextSquares);\n\n    // if(activeUser === 'userX'){\n    //   nextSquares[i] = \"X\";\n    //   setActiveUser('userO');\n    // }      \n    // else {\n    //   nextSquares[i] = \"O\";  \n    //   setActiveUser('userX');\n    // }\n\n    // setSquares(nextSquares);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => handleSquareClick(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => handleSquareClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => handleSquareClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => handleSquareClick(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => handleSquareClick(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => handleSquareClick(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => handleSquareClick(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => handleSquareClick(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => handleSquareClick(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  //Make userX as the default active User\n  const [activeUser, setActiveUser] = useState('userX');\n  //Initiate the history with 9X9 squares filled with null\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  //set the latest(last) row from history as the initial state\n  const currentSquares = history[history.length - 1];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        activeUser: activeUser,\n        squares: currentSquares,\n        children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 85\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: \" Game Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Game, \"UeKo5MT6OjLHmRZEl5DgYi4Ai1k=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","activeUser","squares","onPlay","winner","calculateWinner","status","handleSquareClick","i","nextSquares","slice","_c2","Game","_s","setActiveUser","history","setHistory","Array","fill","currentSquares","length","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/Users/viswanath.gavva/ui_ws/react-tictactoe/src/App.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Square({value,onSquareClick}) {\n  // const [value,setValue] = useState(\"0\");\n  // function handleClick(){\n  //   setValue('X');\n  //   console.log(value);\n  // }\n  \n  return (<button className=\"square\" onClick={onSquareClick}>{value}</button>);\n}\nfunction Board({activeUser,squares,onPlay}) {\n  const winner = calculateWinner(squares);\n  let status;\n  if(winner){\n    status = 'The Winner is :'+winner;\n  } else{\n    status = \"Next player: \" + activeUser;\n  }\n\n  function handleSquareClick(i){\n    //If the square has value. i.e it has been clicked once already. Do not change it.\n    // return from here so the square is unclickable.\n    if(squares[i]){\n      return;\n    }\n\n    //Calculate winner if any. If there is a winner, do not let a user click on any squares.\n    if(calculateWinner(squares)){\n      return ;\n    }\n\n    //make a copy of original state\n    const nextSquares = squares.slice();\n    onPlay(nextSquares);\n\n    // if(activeUser === 'userX'){\n    //   nextSquares[i] = \"X\";\n    //   setActiveUser('userO');\n    // }      \n    // else {\n    //   nextSquares[i] = \"O\";  \n    //   setActiveUser('userX');\n    // }\n      \n    // setSquares(nextSquares);\n  }\n\n  return (\n    <>\n    <div className=\"status\">{status}</div>\n    <div className=\"board-row\">\n      <Square value={squares[0]} onSquareClick={() => handleSquareClick(0)} />\n      <Square value={squares[1]} onSquareClick={() => handleSquareClick(1)} />\n      <Square value={squares[2]} onSquareClick={() => handleSquareClick(2)} />\n    </div>\n    <div className=\"board-row\">\n      <Square value={squares[3]} onSquareClick={() => handleSquareClick(3)} />\n      <Square value={squares[4]} onSquareClick={() => handleSquareClick(4)} />\n      <Square value={squares[5]} onSquareClick={() => handleSquareClick(5)} />\n    </div>\n    <div className=\"board-row\">\n      <Square value={squares[6]} onSquareClick={() => handleSquareClick(6)} />\n      <Square value={squares[7]} onSquareClick={() => handleSquareClick(7)} />\n      <Square value={squares[8]} onSquareClick={() => handleSquareClick(8)} />\n    </div>\n\n    </>\n  )\n}\n\nexport default function Game(){\n//Make userX as the default active User\nconst [activeUser,setActiveUser] = useState('userX');\n//Initiate the history with 9X9 squares filled with null\nconst [history,setHistory] = useState([Array(9).fill(null)]);\n//set the latest(last) row from history as the initial state\nconst currentSquares = history[history.length-1];\n\nreturn (\n  <>\n    <div className=\"game\">\n      <div className=\"game-board\" activeUser={activeUser} squares={currentSquares} ><Board /> </div>\n      <div className=\"game-info\"> Game Information</div>  \n    </div>\n    \n  </>\n)\n}\n\nfunction calculateWinner(squares){\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}